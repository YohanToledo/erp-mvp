generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid())
  name        String
  email       String  @unique
  passwordHash String
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  roles       UserRole[]
  permissions UserPermission[]
}

model Role {
  id          String  @id @default(uuid())
  name        String  @unique
  permissions RolePermission[]
  users       UserRole[]
}

model Permission {
  id          String  @id @default(uuid())
  name        String  @unique
  description String
  roles       RolePermission[]
  users       UserPermission[]
}

model RolePermission {
  roleId       String
  permissionId String

  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}

model UserRole {
  userId  String
  roleId  String

  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  role    Role  @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

model UserPermission {
  userId       String
  permissionId String

  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([userId, permissionId])
}
